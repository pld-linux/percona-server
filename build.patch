--- percona-server-5.7.29-32/storage/rocksdb/CMakeLists.txt~	2020-01-20 15:25:37.000000000 +0100
+++ percona-server-5.7.29-32/storage/rocksdb/CMakeLists.txt	2020-02-17 10:50:15.600870732 +0100
@@ -57,7 +57,7 @@ ELSE()
   # get a list of rocksdb library source files
   # run with env -i to avoid passing variables
   EXECUTE_PROCESS(
-    COMMAND env -i ${CMAKE_CURRENT_SOURCE_DIR}/get_rocksdb_files.sh
+    COMMAND env -i PATH=$ENV{PATH} ${CMAKE_CURRENT_SOURCE_DIR}/get_rocksdb_files.sh
     OUTPUT_VARIABLE SCRIPT_OUTPUT
     WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
   )
--- a/cmake/maintainer.cmake~	2023-02-28 18:21:35.000000000 +0100
+++ b/cmake/maintainer.cmake	2023-04-19 16:21:27.342942580 +0200
@@ -45,12 +45,6 @@ IF(CMAKE_CXX_COMPILER_ID MATCHES "Clang"
   STRING_APPEND(MY_CXX_WARNING_FLAGS " -Wno-unused-parameter -Wno-unused-but-set-variable")
 ENDIF()
 
-# Turn on Werror (warning => error) when using maintainer mode.
-IF(MYSQL_MAINTAINER_MODE)
-  STRING_APPEND(MY_C_WARNING_FLAGS   " -Werror")
-  STRING_APPEND(MY_CXX_WARNING_FLAGS " -Werror")
-ENDIF()
-
 # Set warning flags for GCC/Clang
 IF(CMAKE_COMPILER_IS_GNUCC OR CMAKE_C_COMPILER_ID MATCHES "Clang")
   STRING_APPEND(CMAKE_C_FLAGS " ${MY_C_WARNING_FLAGS}")
--- percona-server-5.7.30-33/storage/tokudb/PerconaFT/cmake_modules/TokuSetupCompiler.cmake~	2020-05-13 23:04:03.000000000 +0200
+++ percona-server-5.7.30-33/storage/tokudb/PerconaFT/cmake_modules/TokuSetupCompiler.cmake	2020-05-24 18:33:01.759229294 +0200
@@ -221,10 +221,6 @@ if (NOT CMAKE_CXX_COMPILER_ID STREQUAL C
   prepend_cflags_if_supported_remove_unsupported(-Wcast-align)
 endif ()
 
-## always want these
-set(CMAKE_C_FLAGS "-Wall -Werror ${CMAKE_C_FLAGS}")
-set(CMAKE_CXX_FLAGS "-Wall -Werror ${CMAKE_CXX_FLAGS}")
-
 # pick language dialect
 set(CMAKE_C_FLAGS "-std=c99 ${CMAKE_C_FLAGS}")
 check_cxx_compiler_flag(-std=c++11 HAVE_STDCXX11)

--- percona-server-5.7.42-46/storage/rocksdb/rocksdb/db/range_del_aggregator.h~	2023-05-29 14:06:13.000000000 +0200
+++ percona-server-5.7.42-46/storage/rocksdb/rocksdb/db/range_del_aggregator.h	2023-07-13 12:01:33.789957701 +0200
@@ -6,6 +6,7 @@
 #pragma once
 
 #include <algorithm>
+#include <cstdio>
 #include <iterator>
 #include <list>
 #include <map>

--- percona-server-5.7.44-48/storage/tokudb/PerconaFT/cmake_modules/TokuBuildTagDatabases.cmake~	2025-03-15 18:05:03.000000000 +0100
+++ percona-server-5.7.44-48/storage/tokudb/PerconaFT/cmake_modules/TokuBuildTagDatabases.cmake	2025-03-15 18:06:40.528033591 +0100
@@ -37,10 +37,14 @@ option(USE_ETAGS "Build the etags databa
 if (USE_ETAGS)
   find_program(ETAGS "etags")
   if (NOT ETAGS MATCHES NOTFOUND)
+      file(WRITE "${CMAKE_CURRENT_BINARY_DIR}/etags.files" "")
+      foreach(file ${all_srcs} ${all_hdrs})
+          file(APPEND "${CMAKE_CURRENT_BINARY_DIR}/etags.files" "${file}\n")
+      endforeach(file)
     add_custom_command(
       OUTPUT "${CMAKE_CURRENT_SOURCE_DIR}/TAGS"
       OUTPUT "${CMAKE_CURRENT_BINARY_DIR}/etags-stamp"
-      COMMAND ${ETAGS} -o TAGS ${all_srcs} ${all_hdrs}
+      COMMAND ${ETAGS} -o TAGS -L "${CMAKE_CURRENT_BINARY_DIR}/etags.files"
       COMMAND touch "${CMAKE_CURRENT_BINARY_DIR}/etags-stamp"
       DEPENDS ${all_srcs} ${all_hdrs} install_tdb_h generate_config_h generate_log_code
       WORKING_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}")
@@ -54,10 +58,14 @@ if (USE_CTAGS AND
     (NOT APPLE OR NOT USE_ETAGS))
   find_program(CTAGS "ctags")
   if (NOT CTAGS MATCHES NOTFOUND)
+      file(WRITE "${CMAKE_CURRENT_BINARY_DIR}/ctags.files" "")
+      foreach(file ${all_srcs} ${all_hdrs})
+          file(APPEND "${CMAKE_CURRENT_BINARY_DIR}/ctags.files" "${file}\n")
+      endforeach(file)
     add_custom_command(
       OUTPUT "${CMAKE_CURRENT_SOURCE_DIR}/tags"
       OUTPUT "${CMAKE_CURRENT_BINARY_DIR}/ctags-stamp"
-      COMMAND ${CTAGS} -o tags ${all_srcs} ${all_hdrs}
+      COMMAND ${CTAGS} -o tags -L "${CMAKE_CURRENT_BINARY_DIR}/ctags.files"
       COMMAND touch "${CMAKE_CURRENT_BINARY_DIR}/ctags-stamp"
       DEPENDS ${all_srcs} ${all_hdrs} install_tdb_h generate_config_h generate_log_code
       WORKING_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}")
